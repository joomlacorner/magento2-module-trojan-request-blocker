<?php
/**
 * MagedIn Technology
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  MagedIn
 * @copyright Copyright (c) 2024 MagedIn Technology.
 *
 * @author    MagedIn Support <support@magedin.com>
 */

declare(strict_types=1);

namespace MagedIn\TrojanRequestBlocker\Plugin;

use MagedIn\TrojanRequestBlocker\Service\Validator\FakeUserRegistration;
use Magento\Customer\Api\AccountManagementInterface;
use Magento\Customer\Api\Data\CustomerInterface;
use Magento\Framework\Exception\LocalizedException;
use Magento\Store\Model\StoreManagerInterface;

/**
 * Plugin to validate customer registration against fake user patterns
 */
class CustomerRegistration
{
    /**
     * @var FakeUserRegistration
     */
    private FakeUserRegistration $validator;

    /**
     * @var StoreManagerInterface
     */
    private StoreManagerInterface $storeManager;

    /**
     * @param FakeUserRegistration $validator
     * @param StoreManagerInterface $storeManager
     */
    public function __construct(
        FakeUserRegistration $validator,
        StoreManagerInterface $storeManager
    ) {
        $this->validator = $validator;
        $this->storeManager = $storeManager;
    }

    /**
     * Before plugin for createAccount method
     *
     * @param AccountManagementInterface $subject
     * @param CustomerInterface $customer
     * @param string|null $password
     * @param string $redirectUrl
     * @return array
     * @throws LocalizedException
     */
    public function beforeCreateAccount(
        AccountManagementInterface $subject,
        CustomerInterface $customer,
        $password = null,
        $redirectUrl = ''
    ): array {
        $store = $this->storeManager->getStore();
        
        $this->validator->validate(
            $customer->getEmail(),
            $customer->getFirstname(),
            $customer->getLastname(),
            \Magento\Store\Model\ScopeInterface::SCOPE_STORE,
            $store->getId()
        );

        return [$customer, $password, $redirectUrl];
    }

    /**
     * Before plugin for createAccountWithPasswordHash method
     *
     * @param AccountManagementInterface $subject
     * @param CustomerInterface $customer
     * @param string $hash
     * @param string $redirectUrl
     * @return array
     * @throws LocalizedException
     */
    public function beforeCreateAccountWithPasswordHash(
        AccountManagementInterface $subject,
        CustomerInterface $customer,
        $hash,
        $redirectUrl = ''
    ): array {
        $store = $this->storeManager->getStore();
        
        $this->validator->validate(
            $customer->getEmail(),
            $customer->getFirstname(),
            $customer->getLastname(),
            \Magento\Store\Model\ScopeInterface::SCOPE_STORE,
            $store->getId()
        );

        return [$customer, $hash, $redirectUrl];
    }
}
